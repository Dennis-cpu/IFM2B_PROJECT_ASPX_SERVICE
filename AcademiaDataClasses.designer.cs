#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Academia_Service
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AcademiaDatabase")]
	public partial class AcademiaDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTutor(Tutor instance);
    partial void UpdateTutor(Tutor instance);
    partial void DeleteTutor(Tutor instance);
    #endregion
		
		public AcademiaDataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["AcademiaDatabaseConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AcademiaDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AcademiaDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AcademiaDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AcademiaDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Tutor> Tutors
		{
			get
			{
				return this.GetTable<Tutor>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tutors")]
	public partial class Tutor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _T_ID;
		
		private string _T_Name;
		
		private string _T_Email;
		
		private string _T_Password;
		
		private string _T_Description;
		
		private string _T_City;
		
		private decimal _T_Price_Rate;
		
		private System.Data.Linq.Binary _T_Picture;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnT_IDChanging(int value);
    partial void OnT_IDChanged();
    partial void OnT_NameChanging(string value);
    partial void OnT_NameChanged();
    partial void OnT_EmailChanging(string value);
    partial void OnT_EmailChanged();
    partial void OnT_PasswordChanging(string value);
    partial void OnT_PasswordChanged();
    partial void OnT_DescriptionChanging(string value);
    partial void OnT_DescriptionChanged();
    partial void OnT_CityChanging(string value);
    partial void OnT_CityChanged();
    partial void OnT_Price_RateChanging(decimal value);
    partial void OnT_Price_RateChanged();
    partial void OnT_PictureChanging(System.Data.Linq.Binary value);
    partial void OnT_PictureChanged();
    #endregion
		
		public Tutor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int T_ID
		{
			get
			{
				return this._T_ID;
			}
			set
			{
				if ((this._T_ID != value))
				{
					this.OnT_IDChanging(value);
					this.SendPropertyChanging();
					this._T_ID = value;
					this.SendPropertyChanged("T_ID");
					this.OnT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string T_Name
		{
			get
			{
				return this._T_Name;
			}
			set
			{
				if ((this._T_Name != value))
				{
					this.OnT_NameChanging(value);
					this.SendPropertyChanging();
					this._T_Name = value;
					this.SendPropertyChanged("T_Name");
					this.OnT_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string T_Email
		{
			get
			{
				return this._T_Email;
			}
			set
			{
				if ((this._T_Email != value))
				{
					this.OnT_EmailChanging(value);
					this.SendPropertyChanging();
					this._T_Email = value;
					this.SendPropertyChanged("T_Email");
					this.OnT_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_Password", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string T_Password
		{
			get
			{
				return this._T_Password;
			}
			set
			{
				if ((this._T_Password != value))
				{
					this.OnT_PasswordChanging(value);
					this.SendPropertyChanging();
					this._T_Password = value;
					this.SendPropertyChanged("T_Password");
					this.OnT_PasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string T_Description
		{
			get
			{
				return this._T_Description;
			}
			set
			{
				if ((this._T_Description != value))
				{
					this.OnT_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._T_Description = value;
					this.SendPropertyChanged("T_Description");
					this.OnT_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_City", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string T_City
		{
			get
			{
				return this._T_City;
			}
			set
			{
				if ((this._T_City != value))
				{
					this.OnT_CityChanging(value);
					this.SendPropertyChanging();
					this._T_City = value;
					this.SendPropertyChanged("T_City");
					this.OnT_CityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_Price_Rate", DbType="SmallMoney NOT NULL")]
		public decimal T_Price_Rate
		{
			get
			{
				return this._T_Price_Rate;
			}
			set
			{
				if ((this._T_Price_Rate != value))
				{
					this.OnT_Price_RateChanging(value);
					this.SendPropertyChanging();
					this._T_Price_Rate = value;
					this.SendPropertyChanged("T_Price_Rate");
					this.OnT_Price_RateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_Picture", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary T_Picture
		{
			get
			{
				return this._T_Picture;
			}
			set
			{
				if ((this._T_Picture != value))
				{
					this.OnT_PictureChanging(value);
					this.SendPropertyChanging();
					this._T_Picture = value;
					this.SendPropertyChanged("T_Picture");
					this.OnT_PictureChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
